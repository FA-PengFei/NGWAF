version: "3.9"
services:
  waf_admin:
    build: ./waf_admin
    ports:
      - "8088:8000"
    volumes:
      - datasets:/app/custom/data/
      - waf_nas:/waf_shared/
    networks:
      mlngwaf:
    restart: always

  # owasp-juicebox:
  #   image: bkimminich/juice-shop
  #   networks:
  #     mlngwaf:

  dvwa:
    image: vulnerables/web-dvwa
    # ports:
    #   - "8083:80"
    networks:
      mlngwaf:

  waf:
    build: ./waf
    ports:
      - "8080:80"
    volumes:
      - ./waf/WafApp/:/waf/WafApp/
      - waf_nas:/waf_shared/
      - waf_logs:/waf/logs/
    networks:
      mlngwaf:
    restart: always

  waf_filebeat:
    build: ./waf_filebeat
    volumes:
      - waf_logs:/usr/share/waflogs/
    networks:
      mlngwaf:

  cache:
    build: ./cache
    networks:
      mlngwaf:
    restart: always

  decode:
    build: ./decode
    # ports:
    #   - "3001:3000"
    networks:
      mlngwaf:
    restart: always

  drupot:
    build: ./drupot
    networks:
      mlngwaf:
    volumes:
      - honeypot_logs:/app/logs/
    ports:
      - "5001:5000"

  filebeat:
    build: ./filebeat
    environment:
      setup.kibana.host: "kibana:5601"
    volumes:
      - honeypot_logs:/usr/share/honeypot/
    networks:
      mlngwaf:

  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    # ports:
    #   - "9200:9200"
    #   - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      mlngwaf:

  logstash:
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    # ports:
    #   - "5044:5044"
    #   - "5000:5000/tcp"
    #   - "5000:5000/udp"
    #   - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      mlngwaf:
    depends_on:
      - elasticsearch

  kibana:
      build:
        context: kibana/
        args:
          ELK_VERSION: $ELK_VERSION
      volumes:
        - type: bind
          source: ./kibana/config/kibana.yml
          target: /usr/share/kibana/config/kibana.yml
          read_only: true
      ports:
        - "5601:5601"
      networks:
        mlngwaf:
      depends_on:
        - elasticsearch

volumes:
  esdata:
    driver: local
  elasticsearch:
  honeypot_logs:
  waf_logs:
  datasets:
  waf_nas:

networks:
  mlngwaf:
    driver: bridge
